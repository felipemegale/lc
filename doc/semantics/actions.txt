// condicao
<C1>: cond := false
<C2>: cond := true

// unicidade
<U1>: if id.classe != vazio, erro
<U2>: if id.classe = vazio, erro

// tipo
<T1>:
if cond:
	Lis.tipo = inteiro
else Lis.tipo = caractere
id.classe = classe-var

<T2>:
if ExpS.tipo != inteiro: erro
else ValVet.tipo = arranjo(0..ExpS.val-1, Lis.tipo)

<T3>:
if cond
	if !isNumero(valor.lex): erro
	else ValVet.tipo = inteiro
else
	if !isNumero(valor.lex): ValVet.tipo = caractere
	elses ValVet.tipo = inteiro

<T4>:
if ValVet.tipo = arranjo(i,t):
	if t != Lis.tipo: erro
	else:
		id.tam = i
		id.tipo = arranjo(i, t)
else /*eh atribuicao*/
	id.tam = 0
	if ValVet.tipo != Lis.tipo:
		erro

<T5>:
if cond:
	if !isNumerico(valor.lex): erro
	else:
		id.tipo = inteiro
else
	if isNumerico(valor.lex):
		id.tipo = inteiro
	else:
		id.tipo = caractere
id.classe = classe-const

<G>:
se cond entao
mov AX,valor.lex
neg AX
id.end = NovoEnd
mov DS:[id.end],AX

/*
var
integer a,b,c,d,e;
char f,g,h,i,j;
integer vet[];
*/